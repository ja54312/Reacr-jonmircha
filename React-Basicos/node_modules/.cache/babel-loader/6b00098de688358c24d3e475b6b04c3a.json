{"ast":null,"code":"var _jsxFileName = \"/home/ja54312/Documentos/React-jonmircha/my-app/src/components/ScrollHooks.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ScrollHooks() {\n  _s();\n\n  const [scrollY, setScrollY] = useState(0);\n  useEffect(() => {\n    const detectarScroll = () => setScrollY(window.pageYOffset);\n\n    window.addEventListener(\"scroll\", detectarScroll);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Hooks use effect y el ciclo de vida\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Scroll Y del Navegador \", scrollY, \"px\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ScrollHooks, \"Xz7J/gk6AYf8ZU7zxLF688IiRC4=\");\n\n_c = ScrollHooks;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScrollHooks\");","map":{"version":3,"sources":["/home/ja54312/Documentos/React-jonmircha/my-app/src/components/ScrollHooks.js"],"names":["React","useState","useEffect","ScrollHooks","scrollY","setScrollY","detectarScroll","window","pageYOffset","addEventListener"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,eAAe,SAASC,WAAT,GAAsB;AAAA;;AACjC,QAAM,CAACC,OAAD,EAASC,UAAT,IAAuBJ,QAAQ,CAAC,CAAD,CAArC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AAGZ,UAAMI,cAAc,GAAG,MAAMD,UAAU,CAACE,MAAM,CAACC,WAAR,CAAvC;;AAEAD,IAAAA,MAAM,CAACE,gBAAP,CAAwB,QAAxB,EAAiCH,cAAjC;AACH,GANQ,CAAT;AAQA,sBACI;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAA,4CAA2BF,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA,kBADJ;AAMH;;GAjBuBD,W;;KAAAA,W","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nexport default function ScrollHooks(){\n    const [scrollY,setScrollY] = useState(0)\n\n    useEffect(() => {\n        \n\n        const detectarScroll = () => setScrollY(window.pageYOffset)\n        \n        window.addEventListener(\"scroll\",detectarScroll)\n    });\n\n    return(\n        <>\n        <h2>Hooks use effect y el ciclo de vida</h2>\n        <p>Scroll Y del Navegador {scrollY}px</p>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}