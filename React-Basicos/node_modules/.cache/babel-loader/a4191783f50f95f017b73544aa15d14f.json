{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nexport const useFetch = url => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const getData = async url => {\n      try {\n        let res = await fetch(url);\n\n        if (!res.ok) {\n          throw {\n            err: true,\n            status: res.status,\n            statusText: !res.statusText ? \"Ocurrió un error\" : res.statusText\n          };\n        }\n\n        let data = await res.json();\n        setIsPending(false);\n        setData(data);\n        setError({\n          err: false\n        });\n      } catch (err) {\n        setIsPending(true);\n        setError(err);\n      }\n    };\n\n    getData(url);\n  }, [url]);\n  return {\n    data,\n    isPending,\n    error\n  };\n};\n\n_s(useFetch, \"VxPkICXS4AfkXU1R8tuEJAA8e58=\");","map":{"version":3,"sources":["/home/ja54312/Documentos/React-jonmircha/my-app/src/hooks/useFetch.js"],"names":["useState","useEffect","useFetch","url","data","setData","isPending","setIsPending","error","setError","getData","res","fetch","ok","err","status","statusText","json"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAO,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AAAA;;AAC/B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,OAAO,GAAG,MAAOP,GAAP,IAAe;AAC7B,UAAI;AACF,YAAIQ,GAAG,GAAG,MAAMC,KAAK,CAACT,GAAD,CAArB;;AAEA,YAAI,CAACQ,GAAG,CAACE,EAAT,EAAa;AACX,gBAAM;AACJC,YAAAA,GAAG,EAAE,IADD;AAEJC,YAAAA,MAAM,EAAEJ,GAAG,CAACI,MAFR;AAGJC,YAAAA,UAAU,EAAE,CAACL,GAAG,CAACK,UAAL,GAAkB,kBAAlB,GAAuCL,GAAG,CAACK;AAHnD,WAAN;AAKD;;AAED,YAAIZ,IAAI,GAAG,MAAMO,GAAG,CAACM,IAAJ,EAAjB;AAEAV,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAF,QAAAA,OAAO,CAACD,IAAD,CAAP;AACAK,QAAAA,QAAQ,CAAC;AAAEK,UAAAA,GAAG,EAAE;AAAP,SAAD,CAAR;AACD,OAhBD,CAgBE,OAAOA,GAAP,EAAY;AACZP,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,QAAAA,QAAQ,CAACK,GAAD,CAAR;AACD;AACF,KArBD;;AAuBAJ,IAAAA,OAAO,CAACP,GAAD,CAAP;AACD,GAzBQ,EAyBN,CAACA,GAAD,CAzBM,CAAT;AA2BA,SAAO;AAAEC,IAAAA,IAAF;AAAQE,IAAAA,SAAR;AAAmBE,IAAAA;AAAnB,GAAP;AACD,CAjCM;;GAAMN,Q","sourcesContent":["import { useState, useEffect } from \"react\";\n\nexport const useFetch = (url) => {\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const getData = async (url) => {\n      try {\n        let res = await fetch(url);\n\n        if (!res.ok) {\n          throw {\n            err: true,\n            status: res.status,\n            statusText: !res.statusText ? \"Ocurrió un error\" : res.statusText,\n          };\n        }\n\n        let data = await res.json();\n\n        setIsPending(false);\n        setData(data);\n        setError({ err: false });\n      } catch (err) {\n        setIsPending(true);\n        setError(err);\n      }\n    };\n\n    getData(url);\n  }, [url]);\n\n  return { data, isPending, error };\n};"]},"metadata":{},"sourceType":"module"}